# -*- coding: utf-8 -*-
"""Domenica_treinamento_fapesc.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Q4KJSc3HkmWSO9E7AvVfElY0viiOkLjB

# Montando Drive


from google.colab import drive
drive.mount('/content/drive')
!ls

# Importando Bibliotecas"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

"""# Abrindo Arquivos"""

url = "https://raw.githubusercontent.com/matheusf30/operacional_dengue/refs/heads/main/dados_operacao/gfs_prec_semana_20250316.csv" #raw
#url2 = "https://raw.githubusercontent.com/matheusf30/operacional_dengue/refs/heads/main/dados_operacao/prec_semana_ate_2024.csv" #raw
prec = pd.read_csv(url)
#prec = pd.read_csv(url2)
print(prec.head(20))
#print(prec)
prec.head() # Diferença na apresentação gráfica

"""# Analisando Variáveis"""

print(prec.info())
print("="*50)
print(prec.dtypes)
print("="*50)
print(prec.describe())

"""# Pré-processamento"""

prec["Semana"] = pd.to_datetime(prec["Semana"])
print(prec.dtypes)

municipios = prec.columns[1:]
print(municipios)

for municipio in municipios:
  max = prec[municipio].max()
  soma = prec[municipio].sum()
  print("=" * 50)
  print(f"Analisando o município: {municipio}")
  print("~" * 50)
  print(f"O valor de precipitação máximo é: {max} mm/semana")
  print("~" * 50)
  print(f"O acumulado de precipitação do período é: {soma} mm")

max = {}
soma = {}
for municipio in municipios:
  max[municipio] = prec[municipio].max()
  soma[municipio] = prec[municipio].sum()
print(max)
print(soma)
plt.figure(figsize=(100, 40))
plt.plot(max.keys(), max.values())
plt.title("Máximo de Precipitação por Município", fontsize = 60)
plt.xlabel("Municípios", fontsize = 40)
plt.ylabel("Precipitação (mm)", fontsize = 60)
plt.xticks(rotation = 90, fontsize = 20)
plt.yticks(fontsize = 40)
plt.grid(True)
plt.show()

df_max = pd.DataFrame(list(max.items()), columns=['Município', 'Máximo'])
df_soma = pd.DataFrame(list(soma.items()), columns=['Município', 'Soma'])
print(df_max)
print(df_soma)

## sort_value ordena por ordem descrescente os máximos de precipitação
df_max = df_max.sort_values(by = "Máximo", ascending = False)
###sort_value ordena por ordem descrescente os acumulados de precipitação
df_soma = df_soma.sort_values(by = "Soma", ascending = False)
print(df_max)
print(df_soma)

"""# Visualização Gráfica

## Barras
"""

plt.figure(figsize=(100, 40))
#plt.bar(df_soma["Município"], df_soma["Soma"])
plt.title("ACUMULADO PRECIPITAÇÃO NOS MUNICÍPIOS DE SANTA CATARINA", fontsize = 50)
plt.bar(df_max["Município"], df_max["Máximo"])
plt.xlabel("Municípios Catarinenses", fontsize = 40)
plt.xticks(rotation = 45, fontsize = 20)
plt.ylabel("Precipitação (mm)", fontsize = 40)
plt.yticks(fontsize = 40)
plt.show()

principais_max = df_max.head(20)
#principais_soma = df_soma.head(20)
print(principais_max)
#print(principais_soma)
plt.figure(figsize=(10, 6))
plt.bar(principais_max["Município"], principais_max["Máximo"])
#plt.bar(principais_soma["Município"], principais_soma["Soma"])
plt.title("ACUMULADO DE PRECIPITAÇÃO")
plt.xlabel("Municípios Catarinenses")
plt.xticks(rotation = 45)
# agora que quero configurar o minimo e maximo dos valores de acumulado de precipitação
#plt.ylim(0, principais_soma["Soma"].max() + 100)
plt.ylim(0, principais_max["Máximo"].max() + 100)
plt.yticks(fontsize = 10)
plt.ylabel("Precipitação (mm)")
plt.gca().patch.set_facecolor("honeydew")
plt.show()

plt.figure(figsize=(10, 6))
plt.bar(df_soma["Município"], df_soma["Soma"])
#plt.bar(df_max["Município"], df_max["Máximo"])
plt.title("SOMA PRECIPITAÇÃO")
plt.xlabel("Municípios Catarinenses")
plt.xticks(rotation = 90)
plt.ylabel("Precipitação (mm)")
plt.show()

principais_soma = df_soma.head(20)
print(principais_soma)
plt.figure(figsize=(10, 6))
plt.bar(principais_soma["Município"], principais_soma["Soma"])
plt.title("ACUMULADO PRECIPITAÇÃO (mm)")
plt.xlabel("Municípios Catarinenses")
plt.xticks(rotation = 45)
plt.ylabel("Precipitação (mm)")
plt.gca().patch.set_facecolor("honeydew")
plt.show()

"""## Série Temporal"""

for municipio in municipios:
  plt.figure(figsize=(10, 6))
  plt.bar(principais_soma["Município"], principais_soma["Soma"])
  #plt.plot(prec["Semana"], prec[municipio])
  plt.title(f"PRECIPITAÇÃO, MUNICÍPIO DE {municipio}")
  plt.xlabel("Municípios")
  plt.ylabel("Precipitação")
  plt.xticks(rotation = 90)
  plt.grid(True)
  plt.show()

sem_tempo = prec.drop(columns = "Semana")
for municipio in municipios:
  plt.figure(figsize=(10, 6))
  plt.plot(prec["Semana"], prec[municipio])
  plt.title(f"PRECIPITAÇÃO, MUNICÍPIO DE {municipio}")
  plt.xlabel("Série Histórica (Semanas Epidemiológicas)")
  plt.ylabel("Precipitação")
  plt.grid(True)
  plt.gca().set_ylim(0, sem_tempo.max().max())
  plt.gca().patch.set_facecolor("honeydew")
  plt.show()

sem_tempo = prec.drop(columns = "Semana")
for municipio in principais_max["Município"]:
  plt.figure(figsize=(10, 6))
  plt.bar(principais_max["Município"], principais_max["Máximo"])
  #plt.plot(prec["Semana"], prec[municipio])
  plt.title(f"PRECIPITAÇÃO, MUNICÍPIO DE {municipio}")
  plt.xlabel("Município")
  plt.ylabel("Precipitação")
  plt.grid(True)
  #plt.gca().set_ylim(0, sem_tempo.max().max())
  #plt.gca().patch.set_facecolor("honeydew")
  plt.show()

sem_tempo = casos.drop(columns = "Semana")
for municipio in principais_soma["Município"]:
  plt.figure(figsize=(10, 6))
  plt.plot(casos["Semana"], casos[municipio])
  plt.title(f"CASOS DE DENGUE, MUNICÍPIO DE {municipio}")
  plt.xlabel("Série Histórica (Semanas Epidemiológicas)")
  plt.ylabel("Número de Casos de dengue")
  plt.grid(True)
  plt.gca().set_ylim(0, sem_tempo.max().max())
  plt.gca().patch.set_facecolor("honeydew")
  plt.show()
